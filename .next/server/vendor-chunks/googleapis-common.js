"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/googleapis-common";
exports.ids = ["vendor-chunks/googleapis-common"];
exports.modules = {

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/apiIndex.js":
/*!**************************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/apiIndex.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAPI = void 0;\nfunction getAPI(api, options, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nversions, context) {\n    let version;\n    if (typeof options === 'string') {\n        version = options;\n        options = {};\n    }\n    else if (typeof options === 'object') {\n        version = options.version;\n        delete options.version;\n    }\n    else {\n        throw new Error('Argument error: Accepts only string or object');\n    }\n    try {\n        const ctr = versions[version];\n        const ep = new ctr(options, context);\n        return Object.freeze(ep);\n    }\n    catch (e) {\n        throw new Error(`Unable to load endpoint ${api}(\"${version}\"): ${e.message}`);\n    }\n}\nexports.getAPI = getAPI;\n//# sourceMappingURL=apiIndex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nb29nbGVhcGlzLWNvbW1vbi9idWlsZC9zcmMvYXBpSW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxJQUFJLElBQUksUUFBUSxNQUFNLFVBQVU7QUFDbkY7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL3Nob3J0Y3V0X2FwcC8uL25vZGVfbW9kdWxlcy9nb29nbGVhcGlzLWNvbW1vbi9idWlsZC9zcmMvYXBpSW5kZXguanM/ZDA1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRBUEkgPSB2b2lkIDA7XG5mdW5jdGlvbiBnZXRBUEkoYXBpLCBvcHRpb25zLCBcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG52ZXJzaW9ucywgY29udGV4dCkge1xuICAgIGxldCB2ZXJzaW9uO1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdmVyc2lvbiA9IG9wdGlvbnM7XG4gICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHZlcnNpb24gPSBvcHRpb25zLnZlcnNpb247XG4gICAgICAgIGRlbGV0ZSBvcHRpb25zLnZlcnNpb247XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FyZ3VtZW50IGVycm9yOiBBY2NlcHRzIG9ubHkgc3RyaW5nIG9yIG9iamVjdCcpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBjb25zdCBjdHIgPSB2ZXJzaW9uc1t2ZXJzaW9uXTtcbiAgICAgICAgY29uc3QgZXAgPSBuZXcgY3RyKG9wdGlvbnMsIGNvbnRleHQpO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmZyZWV6ZShlcCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGxvYWQgZW5kcG9pbnQgJHthcGl9KFwiJHt2ZXJzaW9ufVwiKTogJHtlLm1lc3NhZ2V9YCk7XG4gICAgfVxufVxuZXhwb3J0cy5nZXRBUEkgPSBnZXRBUEk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGlJbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/apiIndex.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/apirequest.js":
/*!****************************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/apirequest.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createAPIRequest = void 0;\nconst google_auth_library_1 = __webpack_require__(/*! google-auth-library */ \"(action-browser)/./node_modules/google-auth-library/build/src/index.js\");\nconst qs = __webpack_require__(/*! qs */ \"(action-browser)/./node_modules/qs/lib/index.js\");\nconst stream = __webpack_require__(/*! stream */ \"stream\");\nconst urlTemplate = __webpack_require__(/*! url-template */ \"(action-browser)/./node_modules/url-template/lib/url-template.js\");\nconst uuid = __webpack_require__(/*! uuid */ \"(action-browser)/./node_modules/uuid/dist/esm-node/index.js\");\nconst extend = __webpack_require__(/*! extend */ \"(action-browser)/./node_modules/extend/index.js\");\nconst isbrowser_1 = __webpack_require__(/*! ./isbrowser */ \"(action-browser)/./node_modules/googleapis-common/build/src/isbrowser.js\");\nconst h2 = __webpack_require__(/*! ./http2 */ \"(action-browser)/./node_modules/googleapis-common/build/src/http2.js\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = __webpack_require__(/*! ../../package.json */ \"(action-browser)/./node_modules/googleapis-common/package.json\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isReadableStream(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        typeof obj.pipe === 'function' &&\n        obj.readable !== false &&\n        typeof obj._read === 'function' &&\n        typeof obj._readableState === 'object');\n}\nfunction getMissingParams(params, required) {\n    const missing = new Array();\n    required.forEach(param => {\n        // Is the required param in the params object?\n        if (params[param] === undefined) {\n            missing.push(param);\n        }\n    });\n    // If there are any required params missing, return their names in array,\n    // otherwise return null\n    return missing.length > 0 ? missing : null;\n}\nfunction createAPIRequest(parameters, callback) {\n    if (callback) {\n        createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n    }\n    else {\n        return createAPIRequestAsync(parameters);\n    }\n}\nexports.createAPIRequest = createAPIRequest;\nasync function createAPIRequestAsync(parameters) {\n    var _a, _b, _c, _d;\n    // Combine the GaxiosOptions options passed with this specific\n    // API call with the global options configured at the API Context\n    // level, or at the global level.\n    const options = extend(true, {}, // Ensure we don't leak settings upstream\n    ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {}, // Google level options\n    parameters.context._options || {}, // Per-API options\n    parameters.options // API call params\n    );\n    const params = extend(true, {}, // New base object\n    options.params, // Combined global/per-api params\n    parameters.params // API call params\n    );\n    options.userAgentDirectives = options.userAgentDirectives || [];\n    const media = params.media || {};\n    /**\n     * In a previous version of this API, the request body was stuffed in a field\n     * named `resource`.  This caused lots of problems, because it's not uncommon\n     * to have an actual named parameter required which is also named `resource`.\n     * This meant that users would have to use `resource_` in those cases, which\n     * pretty much nobody figures out on their own. The request body is now\n     * documented as being in the `requestBody` property, but we also need to keep\n     * using `resource` for reasons of back-compat. Cases that need to be covered\n     * here:\n     * - user provides just a `resource` with a request body\n     * - user provides both a `resource` and a `resource_`\n     * - user provides just a `requestBody`\n     * - user provides both a `requestBody` and a `resource`\n     */\n    let resource = params.requestBody;\n    if (!params.requestBody &&\n        params.resource &&\n        (!parameters.requiredParams.includes('resource') ||\n            typeof params.resource !== 'string')) {\n        resource = params.resource;\n        delete params.resource;\n    }\n    delete params.requestBody;\n    let authClient = params.auth || options.auth;\n    const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n    delete params.media;\n    delete params.auth;\n    // Grab headers from user provided options\n    const headers = params.headers || {};\n    populateAPIHeader(headers);\n    delete params.headers;\n    // Un-alias parameters that were modified due to conflicts with reserved names\n    Object.keys(params).forEach(key => {\n        if (key.slice(-1) === '_') {\n            const newKey = key.slice(0, -1);\n            params[newKey] = params[key];\n            delete params[key];\n        }\n    });\n    // Check for missing required parameters in the API request\n    const missingParams = getMissingParams(params, parameters.requiredParams);\n    if (missingParams) {\n        // Some params are missing - stop further operations and inform the\n        // developer which required params are not included in the request\n        throw new Error('Missing required parameters: ' + missingParams.join(', '));\n    }\n    // Parse urls\n    if (options.url) {\n        let url = options.url;\n        if (typeof url === 'object') {\n            url = url.toString();\n        }\n        options.url = urlTemplate.parse(url).expand(params);\n    }\n    if (parameters.mediaUrl) {\n        parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n    }\n    // Rewrite url if rootUrl is globally set\n    if (parameters.context._options.rootUrl !== undefined &&\n        options.url !== undefined) {\n        const originalUrl = new URL(options.url);\n        const path = originalUrl.href.substr(originalUrl.origin.length);\n        options.url = new URL(path, parameters.context._options.rootUrl).href;\n    }\n    // When forming the querystring, override the serializer so that array\n    // values are serialized like this:\n    // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n    // This serializer also encodes spaces in the querystring as `%20`,\n    // whereas the default serializer in gaxios encodes to a `+`.\n    options.paramsSerializer = params => {\n        return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n    // delete path params from the params object so they do not end up in query\n    parameters.pathParams.forEach(param => delete params[param]);\n    // if authClient is actually a string, use it as an API KEY\n    if (typeof authClient === 'string') {\n        params.key = params.key || authClient;\n        authClient = undefined;\n    }\n    function multipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        const rStream = new stream.PassThrough({\n            flush(callback) {\n                this.push('\\r\\n');\n                this.push(finale);\n                callback();\n            },\n        });\n        const pStream = new ProgressStream();\n        const isStream = isReadableStream(multipart[1].body);\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            rStream.push(preamble);\n            if (typeof part.body === 'string') {\n                rStream.push(part.body);\n                rStream.push('\\r\\n');\n            }\n            else {\n                // Gaxios does not natively support onUploadProgress in node.js.\n                // Pipe through the pStream first to read the number of bytes read\n                // for the purpose of tracking progress.\n                pStream.on('progress', bytesRead => {\n                    if (options.onUploadProgress) {\n                        options.onUploadProgress({ bytesRead });\n                    }\n                });\n                part.body.pipe(pStream).pipe(rStream);\n            }\n        }\n        if (!isStream) {\n            rStream.push(finale);\n            rStream.push(null);\n        }\n        options.data = rStream;\n    }\n    function browserMultipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        let content = '';\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            content += preamble;\n            if (typeof part.body === 'string') {\n                content += part.body;\n                content += '\\r\\n';\n            }\n        }\n        content += finale;\n        options.data = content;\n    }\n    if (parameters.mediaUrl && media.body) {\n        options.url = parameters.mediaUrl;\n        if (resource) {\n            params.uploadType = 'multipart';\n            const multipart = [\n                { 'content-type': 'application/json', body: JSON.stringify(resource) },\n                {\n                    'content-type': media.mimeType || (resource && resource.mimeType) || defaultMime,\n                    body: media.body,\n                },\n            ];\n            if (!(0, isbrowser_1.isBrowser)()) {\n                // gaxios doesn't support multipart/related uploads, so it has to\n                // be implemented here.\n                multipartUpload(multipart);\n            }\n            else {\n                browserMultipartUpload(multipart);\n            }\n        }\n        else {\n            params.uploadType = 'media';\n            Object.assign(headers, { 'content-type': media.mimeType || defaultMime });\n            options.data = media.body;\n        }\n    }\n    else {\n        options.data = resource || undefined;\n    }\n    options.headers = extend(true, options.headers || {}, headers);\n    options.params = params;\n    if (!(0, isbrowser_1.isBrowser)()) {\n        options.headers['Accept-Encoding'] = 'gzip';\n        options.userAgentDirectives.push({\n            product: 'google-api-nodejs-client',\n            version: pkg.version,\n            comment: 'gzip',\n        });\n        const userAgent = options.userAgentDirectives\n            .map(d => {\n            let line = `${d.product}/${d.version}`;\n            if (d.comment) {\n                line += ` (${d.comment})`;\n            }\n            return line;\n        })\n            .join(' ');\n        options.headers['User-Agent'] = userAgent;\n    }\n    // By default gaxios treats any 2xx as valid, and all non 2xx status\n    // codes as errors.  This is a problem for HTTP 304s when used along\n    // with an eTag.\n    if (!options.validateStatus) {\n        options.validateStatus = status => {\n            return (status >= 200 && status < 300) || status === 304;\n        };\n    }\n    // Retry by default\n    options.retry = options.retry === undefined ? true : options.retry;\n    delete options.auth; // is overridden by our auth code\n    // Determine TPC universe\n    if (options.universeDomain &&\n        options.universe_domain &&\n        options.universeDomain !== options.universe_domain) {\n        throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n        ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n        : undefined;\n    const universeDomain = (_d = (_c = (_b = options.universeDomain) !== null && _b !== void 0 ? _b : options.universe_domain) !== null && _c !== void 0 ? _c : universeDomainEnvVar) !== null && _d !== void 0 ? _d : 'googleapis.com';\n    // Update URL to point to the given TPC universe\n    if (universeDomain !== 'googleapis.com' && options.url) {\n        const url = new URL(options.url);\n        if (url.hostname.endsWith('.googleapis.com')) {\n            url.hostname = url.hostname.replace(/googleapis\\.com$/, universeDomain);\n            options.url = url.toString();\n        }\n    }\n    // Perform the HTTP request.  NOTE: this function used to return a\n    // mikeal/request object. Since the transition to Axios, the method is\n    // now void.  This may be a source of confusion for users upgrading from\n    // version 24.0 -> 25.0 or up.\n    if (authClient && typeof authClient === 'object') {\n        // Validate TPC universe\n        const universeFromAuth = typeof authClient.getUniverseDomain === 'function'\n            ? await authClient.getUniverseDomain()\n            : undefined;\n        if (universeFromAuth && universeDomain !== universeFromAuth) {\n            throw new Error(`The configured universe domain (${universeDomain}) does not match the universe domain found in the credentials (${universeFromAuth}). ` +\n                \"If you haven't configured the universe domain explicitly, googleapis.com is the default.\");\n        }\n        if (options.http2) {\n            const authHeaders = await authClient.getRequestHeaders(options.url);\n            const mooOpts = Object.assign({}, options);\n            mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n            return h2.request(mooOpts);\n        }\n        else {\n            return authClient.request(options);\n        }\n    }\n    else {\n        return new google_auth_library_1.DefaultTransporter().request(options);\n    }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', this.bytesRead);\n        this.push(chunk);\n        callback();\n    }\n}\nfunction populateAPIHeader(headers) {\n    // TODO: we should eventually think about adding browser support for this\n    // populating the gl-web header (web support should also be added to\n    // google-auth-library-nodejs).\n    if (!(0, isbrowser_1.isBrowser)()) {\n        headers['x-goog-api-client'] = `gdcl/${pkg.version} gl-node/${process.versions.node}`;\n    }\n}\n//# sourceMappingURL=apirequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/apirequest.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/authplus.js":
/*!**************************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/authplus.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AuthPlus = void 0;\nconst google_auth_library_1 = __webpack_require__(/*! google-auth-library */ \"(action-browser)/./node_modules/google-auth-library/build/src/index.js\");\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n    constructor() {\n        super(...arguments);\n        this.JWT = google_auth_library_1.JWT;\n        this.Compute = google_auth_library_1.Compute;\n        this.OAuth2 = google_auth_library_1.OAuth2Client;\n        this.GoogleAuth = google_auth_library_1.GoogleAuth;\n        this.AwsClient = google_auth_library_1.AwsClient;\n        this.IdentityPoolClient = google_auth_library_1.IdentityPoolClient;\n        this.ExternalAccountClient = google_auth_library_1.ExternalAccountClient;\n    }\n    /**\n     * Override getClient(), memoizing an instance of auth for\n     * subsequent calls to getProjectId().\n     */\n    async getClient(options) {\n        this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this._cachedAuth.getClient();\n    }\n    getProjectId(callback) {\n        if (callback) {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId(callback)\n                : super.getProjectId(callback);\n        }\n        else {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId()\n                : super.getProjectId();\n        }\n    }\n}\nexports.AuthPlus = AuthPlus;\n//# sourceMappingURL=authplus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nb29nbGVhcGlzLWNvbW1vbi9idWlsZC9zcmMvYXV0aHBsdXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLDhCQUE4QixtQkFBTyxDQUFDLG1HQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9ydGN1dF9hcHAvLi9ub2RlX21vZHVsZXMvZ29vZ2xlYXBpcy1jb21tb24vYnVpbGQvc3JjL2F1dGhwbHVzLmpzPzM4MDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXV0aFBsdXMgPSB2b2lkIDA7XG5jb25zdCBnb29nbGVfYXV0aF9saWJyYXJ5XzEgPSByZXF1aXJlKFwiZ29vZ2xlLWF1dGgtbGlicmFyeVwiKTtcbmNsYXNzIEF1dGhQbHVzIGV4dGVuZHMgZ29vZ2xlX2F1dGhfbGlicmFyeV8xLkdvb2dsZUF1dGgge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLkpXVCA9IGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5KV1Q7XG4gICAgICAgIHRoaXMuQ29tcHV0ZSA9IGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5Db21wdXRlO1xuICAgICAgICB0aGlzLk9BdXRoMiA9IGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5PQXV0aDJDbGllbnQ7XG4gICAgICAgIHRoaXMuR29vZ2xlQXV0aCA9IGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5Hb29nbGVBdXRoO1xuICAgICAgICB0aGlzLkF3c0NsaWVudCA9IGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5Bd3NDbGllbnQ7XG4gICAgICAgIHRoaXMuSWRlbnRpdHlQb29sQ2xpZW50ID0gZ29vZ2xlX2F1dGhfbGlicmFyeV8xLklkZW50aXR5UG9vbENsaWVudDtcbiAgICAgICAgdGhpcy5FeHRlcm5hbEFjY291bnRDbGllbnQgPSBnb29nbGVfYXV0aF9saWJyYXJ5XzEuRXh0ZXJuYWxBY2NvdW50Q2xpZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdmVycmlkZSBnZXRDbGllbnQoKSwgbWVtb2l6aW5nIGFuIGluc3RhbmNlIG9mIGF1dGggZm9yXG4gICAgICogc3Vic2VxdWVudCBjYWxscyB0byBnZXRQcm9qZWN0SWQoKS5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRDbGllbnQob3B0aW9ucykge1xuICAgICAgICB0aGlzLl9jYWNoZWRBdXRoID0gbmV3IGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5Hb29nbGVBdXRoKG9wdGlvbnMpO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICByZXR1cm4gdGhpcy5fY2FjaGVkQXV0aC5nZXRDbGllbnQoKTtcbiAgICB9XG4gICAgZ2V0UHJvamVjdElkKGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NhY2hlZEF1dGhcbiAgICAgICAgICAgICAgICA/IHRoaXMuX2NhY2hlZEF1dGguZ2V0UHJvamVjdElkKGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgIDogc3VwZXIuZ2V0UHJvamVjdElkKGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWNoZWRBdXRoXG4gICAgICAgICAgICAgICAgPyB0aGlzLl9jYWNoZWRBdXRoLmdldFByb2plY3RJZCgpXG4gICAgICAgICAgICAgICAgOiBzdXBlci5nZXRQcm9qZWN0SWQoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQXV0aFBsdXMgPSBBdXRoUGx1cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhwbHVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/authplus.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/discovery.js":
/*!***************************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/discovery.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Discovery = void 0;\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst google_auth_library_1 = __webpack_require__(/*! google-auth-library */ \"(action-browser)/./node_modules/google-auth-library/build/src/index.js\");\nconst resolve = __webpack_require__(/*! url */ \"url\");\nconst util = __webpack_require__(/*! util */ \"util\");\nconst apirequest_1 = __webpack_require__(/*! ./apirequest */ \"(action-browser)/./node_modules/googleapis-common/build/src/apirequest.js\");\nconst endpoint_1 = __webpack_require__(/*! ./endpoint */ \"(action-browser)/./node_modules/googleapis-common/build/src/endpoint.js\");\nconst readFile = util.promisify(fs.readFile);\nclass Discovery {\n    /**\n     * Discovery for discovering API endpoints\n     *\n     * @param options Options for discovery\n     */\n    constructor(options) {\n        this.transporter = new google_auth_library_1.DefaultTransporter();\n        this.options = options || {};\n    }\n    /**\n     * Generate and Endpoint from an endpoint schema object.\n     *\n     * @param schema The schema from which to generate the Endpoint.\n     * @return A function that creates an endpoint.\n     */\n    makeEndpoint(schema) {\n        return (options) => {\n            const ep = new endpoint_1.Endpoint(options);\n            ep.applySchema(ep, schema, schema, ep);\n            return ep;\n        };\n    }\n    /**\n     * Log output of generator. Works just like console.log\n     */\n    log(...args) {\n        if (this.options && this.options.debug) {\n            console.log(...args);\n        }\n    }\n    /**\n     * Generate all APIs and return as in-memory object.\n     * @param discoveryUrl\n     */\n    async discoverAllAPIs(discoveryUrl) {\n        const headers = this.options.includePrivate\n            ? {}\n            : { 'X-User-Ip': '0.0.0.0' };\n        const res = await this.transporter.request({\n            url: discoveryUrl,\n            headers,\n        });\n        const items = res.data.items;\n        const apis = await Promise.all(items.map(async (api) => {\n            const endpointCreator = await this.discoverAPI(api.discoveryRestUrl);\n            return { api, endpointCreator };\n        }));\n        const versionIndex = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const apisIndex = {};\n        for (const set of apis) {\n            if (!apisIndex[set.api.name]) {\n                versionIndex[set.api.name] = {};\n                apisIndex[set.api.name] = (options) => {\n                    const type = typeof options;\n                    let version;\n                    if (type === 'string') {\n                        version = options;\n                        options = {};\n                    }\n                    else if (type === 'object') {\n                        version = options.version;\n                        delete options.version;\n                    }\n                    else {\n                        throw new Error('Argument error: Accepts only string or object');\n                    }\n                    try {\n                        const ep = set.endpointCreator(options, this);\n                        return Object.freeze(ep); // create new & freeze\n                    }\n                    catch (e) {\n                        throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                    }\n                };\n            }\n            versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n        }\n        return apisIndex;\n    }\n    /**\n     * Generate API file given discovery URL\n     *\n     * @param apiDiscoveryUrl URL or filename of discovery doc for API\n     * @returns A promise that resolves with a function that creates the endpoint\n     */\n    async discoverAPI(apiDiscoveryUrl) {\n        if (typeof apiDiscoveryUrl === 'string') {\n            const parts = resolve.parse(apiDiscoveryUrl);\n            if (apiDiscoveryUrl && !parts.protocol) {\n                this.log('Reading from file ' + apiDiscoveryUrl);\n                const file = await readFile(apiDiscoveryUrl, { encoding: 'utf8' });\n                return this.makeEndpoint(JSON.parse(file));\n            }\n            else {\n                this.log('Requesting ' + apiDiscoveryUrl);\n                const res = await this.transporter.request({\n                    url: apiDiscoveryUrl,\n                });\n                return this.makeEndpoint(res.data);\n            }\n        }\n        else {\n            const options = apiDiscoveryUrl;\n            this.log('Requesting ' + options.url);\n            const url = options.url;\n            delete options.url;\n            const parameters = {\n                options: { url, method: 'GET' },\n                requiredParams: [],\n                pathParams: [],\n                params: options,\n                context: { google: { _options: {} }, _options: {} },\n            };\n            const res = await (0, apirequest_1.createAPIRequest)(parameters);\n            return this.makeEndpoint(res.data);\n        }\n    }\n}\nexports.Discovery = Discovery;\n//# sourceMappingURL=discovery.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/discovery.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/endpoint.js":
/*!**************************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/endpoint.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Endpoint = void 0;\nconst apirequest_1 = __webpack_require__(/*! ./apirequest */ \"(action-browser)/./node_modules/googleapis-common/build/src/apirequest.js\");\nclass Endpoint {\n    constructor(options) {\n        this._options = options || {};\n    }\n    /**\n     * Given a schema, add methods and resources to a target.\n     *\n     * @param {object} target The target to which to apply the schema.\n     * @param {object} rootSchema The top-level schema, so we don't lose track of it\n     * during recursion.\n     * @param {object} schema The current schema from which to extract methods and\n     * resources.\n     * @param {object} context The context to add to each method.\n     */\n    applySchema(target, rootSchema, schema, context) {\n        this.applyMethodsFromSchema(target, rootSchema, schema, context);\n        if (schema.resources) {\n            for (const resourceName in schema.resources) {\n                if (Object.prototype.hasOwnProperty.call(schema.resources, resourceName)) {\n                    const resource = schema.resources[resourceName];\n                    if (!target[resourceName]) {\n                        target[resourceName] = {};\n                    }\n                    this.applySchema(target[resourceName], rootSchema, resource, context);\n                }\n            }\n        }\n    }\n    /**\n     * Given a schema, add methods to a target.\n     *\n     * @param {object} target The target to which to apply the methods.\n     * @param {object} rootSchema The top-level schema, so we don't lose track of it\n     * during recursion.\n     * @param {object} schema The current schema from which to extract methods.\n     * @param {object} context The context to add to each method.\n     */\n    applyMethodsFromSchema(target, rootSchema, schema, context) {\n        if (schema.methods) {\n            for (const name in schema.methods) {\n                if (Object.prototype.hasOwnProperty.call(schema.methods, name)) {\n                    const method = schema.methods[name];\n                    target[name] = this.makeMethod(rootSchema, method, context);\n                }\n            }\n        }\n    }\n    /**\n     * Given a method schema, add a method to a target.\n     *\n     * @param target The target to which to add the method.\n     * @param schema The top-level schema that contains the rootUrl, etc.\n     * @param method The method schema from which to generate the method.\n     * @param context The context to add to the method.\n     */\n    makeMethod(schema, method, context) {\n        return (paramsOrCallback, callback) => {\n            const params = typeof paramsOrCallback === 'function' ? {} : paramsOrCallback;\n            callback =\n                typeof paramsOrCallback === 'function'\n                    ? paramsOrCallback\n                    : callback;\n            const schemaUrl = buildurl(schema.rootUrl + schema.servicePath + method.path);\n            const parameters = {\n                options: {\n                    url: schemaUrl.substring(1, schemaUrl.length - 1),\n                    method: method.httpMethod,\n                },\n                params,\n                requiredParams: method.parameterOrder || [],\n                pathParams: this.getPathParams(method.parameters),\n                context,\n            };\n            if (method.mediaUpload &&\n                method.mediaUpload.protocols &&\n                method.mediaUpload.protocols.simple &&\n                method.mediaUpload.protocols.simple.path) {\n                const mediaUrl = buildurl(schema.rootUrl + method.mediaUpload.protocols.simple.path);\n                parameters.mediaUrl = mediaUrl.substring(1, mediaUrl.length - 1);\n            }\n            if (!callback) {\n                return (0, apirequest_1.createAPIRequest)(parameters);\n            }\n            (0, apirequest_1.createAPIRequest)(parameters, callback);\n            return;\n        };\n    }\n    getPathParams(params) {\n        const pathParams = new Array();\n        if (typeof params !== 'object') {\n            params = {};\n        }\n        Object.keys(params).forEach(key => {\n            if (params[key].location === 'path') {\n                pathParams.push(key);\n            }\n        });\n        return pathParams;\n    }\n}\nexports.Endpoint = Endpoint;\n/**\n * Build a string used to create a URL from the discovery doc provided URL.\n * replace double slashes with single slash (except in https://)\n * @private\n * @param  input URL to build from\n * @return Resulting built URL\n */\nfunction buildurl(input) {\n    return input ? `'${input}'`.replace(/([^:]\\/)\\/+/g, '$1') : '';\n}\n//# sourceMappingURL=endpoint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/endpoint.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/http2.js":
/*!***********************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/http2.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.closeSession = exports.request = exports.sessions = void 0;\nconst http2 = __webpack_require__(/*! http2 */ \"http2\");\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst qs = __webpack_require__(/*! qs */ \"(action-browser)/./node_modules/qs/lib/index.js\");\nconst extend = __webpack_require__(/*! extend */ \"(action-browser)/./node_modules/extend/index.js\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst util = __webpack_require__(/*! util */ \"util\");\nconst process = __webpack_require__(/*! process */ \"process\");\nconst common_1 = __webpack_require__(/*! gaxios/build/src/common */ \"(action-browser)/./node_modules/gaxios/build/src/common.js\");\nconst { HTTP2_HEADER_CONTENT_ENCODING, HTTP2_HEADER_CONTENT_TYPE, HTTP2_HEADER_METHOD, HTTP2_HEADER_PATH, HTTP2_HEADER_STATUS, } = http2.constants;\nconst DEBUG = !!process.env.HTTP2_DEBUG;\n/**\n * List of sessions current in use.\n * @private\n */\nexports.sessions = {};\n/**\n * Public method to make an http2 request.\n * @param config - Request options.\n */\nasync function request(config) {\n    const opts = extend(true, {}, config);\n    opts.validateStatus = opts.validateStatus || validateStatus;\n    opts.responseType = opts.responseType || 'json';\n    const url = new url_1.URL(opts.url);\n    // Check for an existing session to this host, or go create a new one.\n    const sessionData = _getClient(url.host);\n    // Since we're using this session, clear the timeout handle to ensure\n    // it stays in memory and connected for a while further.\n    if (sessionData.timeoutHandle !== undefined) {\n        clearTimeout(sessionData.timeoutHandle);\n    }\n    // Assemble the querystring based on config.params.  We're using the\n    // `qs` module to make life a little easier.\n    let pathWithQs = url.pathname;\n    if (config.params && Object.keys(config.params).length > 0) {\n        const serializer = config.paramsSerializer || qs.stringify;\n        const q = serializer(opts.params);\n        pathWithQs += `?${q}`;\n    }\n    // Assemble the headers based on basic HTTP2 primitives (path, method) and\n    // custom headers sent from the consumer.  Note: I am using `Object.assign`\n    // here making the assumption these objects are not deep.  If it turns out\n    // they are, we may need to use the `extend` npm module for deep cloning.\n    const headers = Object.assign({}, opts.headers, {\n        [HTTP2_HEADER_PATH]: pathWithQs,\n        [HTTP2_HEADER_METHOD]: config.method || 'GET',\n    });\n    // NOTE: This is working around an upstream bug in `apirequest.ts`. The\n    // request path assumes that the `content-type` header is going to be set in\n    // the underlying HTTP Client. This hack provides bug for bug compatability\n    // with this bug in gaxios:\n    // https://github.com/googleapis/gaxios/blob/main/src/gaxios.ts#L202\n    if (!headers[HTTP2_HEADER_CONTENT_TYPE]) {\n        if (opts.responseType !== 'text') {\n            headers[HTTP2_HEADER_CONTENT_TYPE] = 'application/json';\n        }\n    }\n    const res = {\n        config,\n        request: {},\n        headers: [],\n        status: 0,\n        data: {},\n        statusText: '',\n    };\n    const chunks = [];\n    const session = sessionData.session;\n    let req;\n    return new Promise((resolve, reject) => {\n        try {\n            req = session\n                .request(headers)\n                .on('response', headers => {\n                res.headers = headers;\n                res.status = Number(headers[HTTP2_HEADER_STATUS]);\n                let stream = req;\n                if (headers[HTTP2_HEADER_CONTENT_ENCODING] === 'gzip') {\n                    stream = req.pipe(zlib.createGunzip());\n                }\n                if (opts.responseType === 'stream') {\n                    res.data = stream;\n                    resolve(res);\n                    return;\n                }\n                stream\n                    .on('data', d => {\n                    chunks.push(d);\n                })\n                    .on('error', err => {\n                    reject(err);\n                    return;\n                })\n                    .on('end', () => {\n                    const buf = Buffer.concat(chunks);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    let data = buf;\n                    if (buf) {\n                        if (opts.responseType === 'json') {\n                            try {\n                                data = JSON.parse(buf.toString('utf8'));\n                            }\n                            catch (_a) {\n                                data = buf.toString('utf8');\n                            }\n                        }\n                        else if (opts.responseType === 'text') {\n                            data = buf.toString('utf8');\n                        }\n                        else if (opts.responseType === 'arraybuffer') {\n                            data = buf.buffer;\n                        }\n                        res.data = data;\n                    }\n                    if (!opts.validateStatus(res.status)) {\n                        let message = `Request failed with status code ${res.status}. `;\n                        if (res.data && typeof res.data === 'object') {\n                            const body = util.inspect(res.data, { depth: 5 });\n                            message = `${message}\\n'${body}`;\n                        }\n                        reject(new common_1.GaxiosError(message, opts, res));\n                    }\n                    resolve(res);\n                    return;\n                });\n            })\n                .on('error', e => {\n                reject(e);\n                return;\n            });\n        }\n        catch (e) {\n            closeSession(url);\n            reject(e);\n        }\n        res.request = req;\n        // If data was provided, write it to the request in the form of\n        // a stream, string data, or a basic object.\n        if (config.data) {\n            if (config.data instanceof stream_1.Stream) {\n                config.data.pipe(req);\n            }\n            else if (typeof config.data === 'string') {\n                const data = Buffer.from(config.data);\n                req.end(data);\n            }\n            else if (typeof config.data === 'object') {\n                const data = JSON.stringify(config.data);\n                req.end(data);\n            }\n        }\n        // Create a timeout so the Http2Session will be cleaned up after\n        // a period of non-use. 500 milliseconds was chosen because it's\n        // a nice round number, and I don't know what would be a better\n        // choice. Keeping this channel open will hold a file descriptor\n        // which will prevent the process from exiting.\n        sessionData.timeoutHandle = setTimeout(() => {\n            closeSession(url);\n        }, 500);\n    });\n}\nexports.request = request;\n/**\n * By default, throw for any non-2xx status code\n * @param status - status code from the HTTP response\n */\nfunction validateStatus(status) {\n    return status >= 200 && status < 300;\n}\n/**\n * Obtain an existing h2 session or go create a new one.\n * @param host - The hostname to which the session belongs.\n */\nfunction _getClient(host) {\n    if (!exports.sessions[host]) {\n        if (DEBUG) {\n            console.log(`Creating client for ${host}`);\n        }\n        const session = http2.connect(`https://${host}`);\n        session\n            .on('error', e => {\n            console.error(`*ERROR*: ${e}`);\n            delete exports.sessions[host];\n        })\n            .on('goaway', (errorCode, lastStreamId) => {\n            console.error(`*GOAWAY*: ${errorCode} : ${lastStreamId}`);\n            delete exports.sessions[host];\n        });\n        exports.sessions[host] = { session };\n    }\n    else {\n        if (DEBUG) {\n            console.log(`Used cached client for ${host}`);\n        }\n    }\n    return exports.sessions[host];\n}\nasync function closeSession(url) {\n    const sessionData = exports.sessions[url.host];\n    if (!sessionData) {\n        return;\n    }\n    const { session } = sessionData;\n    delete exports.sessions[url.host];\n    if (DEBUG) {\n        console.error(`Closing ${url.host}`);\n    }\n    session.close(() => {\n        if (DEBUG) {\n            console.error(`Closed ${url.host}`);\n        }\n    });\n    setTimeout(() => {\n        if (session && !session.destroyed) {\n            if (DEBUG) {\n                console.log(`Forcing close ${url.host}`);\n            }\n            if (session) {\n                session.destroy();\n            }\n        }\n    }, 1000);\n}\nexports.closeSession = closeSession;\n//# sourceMappingURL=http2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nb29nbGVhcGlzLWNvbW1vbi9idWlsZC9zcmMvaHR0cDIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsZUFBZSxHQUFHLGdCQUFnQjtBQUN6RCxjQUFjLG1CQUFPLENBQUMsb0JBQU87QUFDN0IsYUFBYSxtQkFBTyxDQUFDLGtCQUFNO0FBQzNCLGNBQWMsbUJBQU8sQ0FBQyxnQkFBSztBQUMzQixXQUFXLG1CQUFPLENBQUMsMkRBQUk7QUFDdkIsZUFBZSxtQkFBTyxDQUFDLCtEQUFRO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQixnQkFBZ0IsbUJBQU8sQ0FBQyx3QkFBUztBQUNqQyxpQkFBaUIsbUJBQU8sQ0FBQywyRkFBeUI7QUFDbEQsUUFBUSx5SEFBeUg7QUFDakk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEVBQUU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsV0FBVztBQUNwRjtBQUNBLGtFQUFrRSxVQUFVO0FBQzVFLHlDQUF5QyxRQUFRLEtBQUssS0FBSztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsS0FBSztBQUNwRDtBQUNBLGlEQUFpRCxLQUFLO0FBQ3REO0FBQ0E7QUFDQSxzQ0FBc0MsRUFBRTtBQUN4QztBQUNBLFNBQVM7QUFDVDtBQUNBLHVDQUF1QyxXQUFXLElBQUksYUFBYTtBQUNuRTtBQUNBLFNBQVM7QUFDVCxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELEtBQUs7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQSxpQ0FBaUMsU0FBUztBQUMxQztBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsU0FBUztBQUM3QztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsU0FBUztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2hvcnRjdXRfYXBwLy4vbm9kZV9tb2R1bGVzL2dvb2dsZWFwaXMtY29tbW9uL2J1aWxkL3NyYy9odHRwMi5qcz9hNGJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNsb3NlU2Vzc2lvbiA9IGV4cG9ydHMucmVxdWVzdCA9IGV4cG9ydHMuc2Vzc2lvbnMgPSB2b2lkIDA7XG5jb25zdCBodHRwMiA9IHJlcXVpcmUoXCJodHRwMlwiKTtcbmNvbnN0IHpsaWIgPSByZXF1aXJlKFwiemxpYlwiKTtcbmNvbnN0IHVybF8xID0gcmVxdWlyZShcInVybFwiKTtcbmNvbnN0IHFzID0gcmVxdWlyZShcInFzXCIpO1xuY29uc3QgZXh0ZW5kID0gcmVxdWlyZShcImV4dGVuZFwiKTtcbmNvbnN0IHN0cmVhbV8xID0gcmVxdWlyZShcInN0cmVhbVwiKTtcbmNvbnN0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcbmNvbnN0IHByb2Nlc3MgPSByZXF1aXJlKFwicHJvY2Vzc1wiKTtcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcImdheGlvcy9idWlsZC9zcmMvY29tbW9uXCIpO1xuY29uc3QgeyBIVFRQMl9IRUFERVJfQ09OVEVOVF9FTkNPRElORywgSFRUUDJfSEVBREVSX0NPTlRFTlRfVFlQRSwgSFRUUDJfSEVBREVSX01FVEhPRCwgSFRUUDJfSEVBREVSX1BBVEgsIEhUVFAyX0hFQURFUl9TVEFUVVMsIH0gPSBodHRwMi5jb25zdGFudHM7XG5jb25zdCBERUJVRyA9ICEhcHJvY2Vzcy5lbnYuSFRUUDJfREVCVUc7XG4vKipcbiAqIExpc3Qgb2Ygc2Vzc2lvbnMgY3VycmVudCBpbiB1c2UuXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnRzLnNlc3Npb25zID0ge307XG4vKipcbiAqIFB1YmxpYyBtZXRob2QgdG8gbWFrZSBhbiBodHRwMiByZXF1ZXN0LlxuICogQHBhcmFtIGNvbmZpZyAtIFJlcXVlc3Qgb3B0aW9ucy5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgICBjb25zdCBvcHRzID0gZXh0ZW5kKHRydWUsIHt9LCBjb25maWcpO1xuICAgIG9wdHMudmFsaWRhdGVTdGF0dXMgPSBvcHRzLnZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzO1xuICAgIG9wdHMucmVzcG9uc2VUeXBlID0gb3B0cy5yZXNwb25zZVR5cGUgfHwgJ2pzb24nO1xuICAgIGNvbnN0IHVybCA9IG5ldyB1cmxfMS5VUkwob3B0cy51cmwpO1xuICAgIC8vIENoZWNrIGZvciBhbiBleGlzdGluZyBzZXNzaW9uIHRvIHRoaXMgaG9zdCwgb3IgZ28gY3JlYXRlIGEgbmV3IG9uZS5cbiAgICBjb25zdCBzZXNzaW9uRGF0YSA9IF9nZXRDbGllbnQodXJsLmhvc3QpO1xuICAgIC8vIFNpbmNlIHdlJ3JlIHVzaW5nIHRoaXMgc2Vzc2lvbiwgY2xlYXIgdGhlIHRpbWVvdXQgaGFuZGxlIHRvIGVuc3VyZVxuICAgIC8vIGl0IHN0YXlzIGluIG1lbW9yeSBhbmQgY29ubmVjdGVkIGZvciBhIHdoaWxlIGZ1cnRoZXIuXG4gICAgaWYgKHNlc3Npb25EYXRhLnRpbWVvdXRIYW5kbGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjbGVhclRpbWVvdXQoc2Vzc2lvbkRhdGEudGltZW91dEhhbmRsZSk7XG4gICAgfVxuICAgIC8vIEFzc2VtYmxlIHRoZSBxdWVyeXN0cmluZyBiYXNlZCBvbiBjb25maWcucGFyYW1zLiAgV2UncmUgdXNpbmcgdGhlXG4gICAgLy8gYHFzYCBtb2R1bGUgdG8gbWFrZSBsaWZlIGEgbGl0dGxlIGVhc2llci5cbiAgICBsZXQgcGF0aFdpdGhRcyA9IHVybC5wYXRobmFtZTtcbiAgICBpZiAoY29uZmlnLnBhcmFtcyAmJiBPYmplY3Qua2V5cyhjb25maWcucGFyYW1zKS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IHNlcmlhbGl6ZXIgPSBjb25maWcucGFyYW1zU2VyaWFsaXplciB8fCBxcy5zdHJpbmdpZnk7XG4gICAgICAgIGNvbnN0IHEgPSBzZXJpYWxpemVyKG9wdHMucGFyYW1zKTtcbiAgICAgICAgcGF0aFdpdGhRcyArPSBgPyR7cX1gO1xuICAgIH1cbiAgICAvLyBBc3NlbWJsZSB0aGUgaGVhZGVycyBiYXNlZCBvbiBiYXNpYyBIVFRQMiBwcmltaXRpdmVzIChwYXRoLCBtZXRob2QpIGFuZFxuICAgIC8vIGN1c3RvbSBoZWFkZXJzIHNlbnQgZnJvbSB0aGUgY29uc3VtZXIuICBOb3RlOiBJIGFtIHVzaW5nIGBPYmplY3QuYXNzaWduYFxuICAgIC8vIGhlcmUgbWFraW5nIHRoZSBhc3N1bXB0aW9uIHRoZXNlIG9iamVjdHMgYXJlIG5vdCBkZWVwLiAgSWYgaXQgdHVybnMgb3V0XG4gICAgLy8gdGhleSBhcmUsIHdlIG1heSBuZWVkIHRvIHVzZSB0aGUgYGV4dGVuZGAgbnBtIG1vZHVsZSBmb3IgZGVlcCBjbG9uaW5nLlxuICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHt9LCBvcHRzLmhlYWRlcnMsIHtcbiAgICAgICAgW0hUVFAyX0hFQURFUl9QQVRIXTogcGF0aFdpdGhRcyxcbiAgICAgICAgW0hUVFAyX0hFQURFUl9NRVRIT0RdOiBjb25maWcubWV0aG9kIHx8ICdHRVQnLFxuICAgIH0pO1xuICAgIC8vIE5PVEU6IFRoaXMgaXMgd29ya2luZyBhcm91bmQgYW4gdXBzdHJlYW0gYnVnIGluIGBhcGlyZXF1ZXN0LnRzYC4gVGhlXG4gICAgLy8gcmVxdWVzdCBwYXRoIGFzc3VtZXMgdGhhdCB0aGUgYGNvbnRlbnQtdHlwZWAgaGVhZGVyIGlzIGdvaW5nIHRvIGJlIHNldCBpblxuICAgIC8vIHRoZSB1bmRlcmx5aW5nIEhUVFAgQ2xpZW50LiBUaGlzIGhhY2sgcHJvdmlkZXMgYnVnIGZvciBidWcgY29tcGF0YWJpbGl0eVxuICAgIC8vIHdpdGggdGhpcyBidWcgaW4gZ2F4aW9zOlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVhcGlzL2dheGlvcy9ibG9iL21haW4vc3JjL2dheGlvcy50cyNMMjAyXG4gICAgaWYgKCFoZWFkZXJzW0hUVFAyX0hFQURFUl9DT05URU5UX1RZUEVdKSB7XG4gICAgICAgIGlmIChvcHRzLnJlc3BvbnNlVHlwZSAhPT0gJ3RleHQnKSB7XG4gICAgICAgICAgICBoZWFkZXJzW0hUVFAyX0hFQURFUl9DT05URU5UX1RZUEVdID0gJ2FwcGxpY2F0aW9uL2pzb24nO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHJlcyA9IHtcbiAgICAgICAgY29uZmlnLFxuICAgICAgICByZXF1ZXN0OiB7fSxcbiAgICAgICAgaGVhZGVyczogW10sXG4gICAgICAgIHN0YXR1czogMCxcbiAgICAgICAgZGF0YToge30sXG4gICAgICAgIHN0YXR1c1RleHQ6ICcnLFxuICAgIH07XG4gICAgY29uc3QgY2h1bmtzID0gW107XG4gICAgY29uc3Qgc2Vzc2lvbiA9IHNlc3Npb25EYXRhLnNlc3Npb247XG4gICAgbGV0IHJlcTtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmVxID0gc2Vzc2lvblxuICAgICAgICAgICAgICAgIC5yZXF1ZXN0KGhlYWRlcnMpXG4gICAgICAgICAgICAgICAgLm9uKCdyZXNwb25zZScsIGhlYWRlcnMgPT4ge1xuICAgICAgICAgICAgICAgIHJlcy5oZWFkZXJzID0gaGVhZGVycztcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzID0gTnVtYmVyKGhlYWRlcnNbSFRUUDJfSEVBREVSX1NUQVRVU10pO1xuICAgICAgICAgICAgICAgIGxldCBzdHJlYW0gPSByZXE7XG4gICAgICAgICAgICAgICAgaWYgKGhlYWRlcnNbSFRUUDJfSEVBREVSX0NPTlRFTlRfRU5DT0RJTkddID09PSAnZ3ppcCcpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtID0gcmVxLnBpcGUoemxpYi5jcmVhdGVHdW56aXAoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChvcHRzLnJlc3BvbnNlVHlwZSA9PT0gJ3N0cmVhbScpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzLmRhdGEgPSBzdHJlYW07XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdHJlYW1cbiAgICAgICAgICAgICAgICAgICAgLm9uKCdkYXRhJywgZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNodW5rcy5wdXNoKGQpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5vbignZXJyb3InLCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5vbignZW5kJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBidWYgPSBCdWZmZXIuY29uY2F0KGNodW5rcyk7XG4gICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhID0gYnVmO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnVmKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob3B0cy5yZXNwb25zZVR5cGUgPT09ICdqc29uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGJ1Zi50b1N0cmluZygndXRmOCcpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBidWYudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChvcHRzLnJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IGJ1Zi50b1N0cmluZygndXRmOCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAob3B0cy5yZXNwb25zZVR5cGUgPT09ICdhcnJheWJ1ZmZlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gYnVmLmJ1ZmZlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5kYXRhID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoIW9wdHMudmFsaWRhdGVTdGF0dXMocmVzLnN0YXR1cykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtZXNzYWdlID0gYFJlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJHtyZXMuc3RhdHVzfS4gYDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YSAmJiB0eXBlb2YgcmVzLmRhdGEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IHV0aWwuaW5zcGVjdChyZXMuZGF0YSwgeyBkZXB0aDogNSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlID0gYCR7bWVzc2FnZX1cXG4nJHtib2R5fWA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IGNvbW1vbl8xLkdheGlvc0Vycm9yKG1lc3NhZ2UsIG9wdHMsIHJlcykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAub24oJ2Vycm9yJywgZSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjbG9zZVNlc3Npb24odXJsKTtcbiAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgfVxuICAgICAgICByZXMucmVxdWVzdCA9IHJlcTtcbiAgICAgICAgLy8gSWYgZGF0YSB3YXMgcHJvdmlkZWQsIHdyaXRlIGl0IHRvIHRoZSByZXF1ZXN0IGluIHRoZSBmb3JtIG9mXG4gICAgICAgIC8vIGEgc3RyZWFtLCBzdHJpbmcgZGF0YSwgb3IgYSBiYXNpYyBvYmplY3QuXG4gICAgICAgIGlmIChjb25maWcuZGF0YSkge1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5kYXRhIGluc3RhbmNlb2Ygc3RyZWFtXzEuU3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgY29uZmlnLmRhdGEucGlwZShyZXEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGNvbmZpZy5kYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuZnJvbShjb25maWcuZGF0YSk7XG4gICAgICAgICAgICAgICAgcmVxLmVuZChkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBjb25maWcuZGF0YSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5zdHJpbmdpZnkoY29uZmlnLmRhdGEpO1xuICAgICAgICAgICAgICAgIHJlcS5lbmQoZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ3JlYXRlIGEgdGltZW91dCBzbyB0aGUgSHR0cDJTZXNzaW9uIHdpbGwgYmUgY2xlYW5lZCB1cCBhZnRlclxuICAgICAgICAvLyBhIHBlcmlvZCBvZiBub24tdXNlLiA1MDAgbWlsbGlzZWNvbmRzIHdhcyBjaG9zZW4gYmVjYXVzZSBpdCdzXG4gICAgICAgIC8vIGEgbmljZSByb3VuZCBudW1iZXIsIGFuZCBJIGRvbid0IGtub3cgd2hhdCB3b3VsZCBiZSBhIGJldHRlclxuICAgICAgICAvLyBjaG9pY2UuIEtlZXBpbmcgdGhpcyBjaGFubmVsIG9wZW4gd2lsbCBob2xkIGEgZmlsZSBkZXNjcmlwdG9yXG4gICAgICAgIC8vIHdoaWNoIHdpbGwgcHJldmVudCB0aGUgcHJvY2VzcyBmcm9tIGV4aXRpbmcuXG4gICAgICAgIHNlc3Npb25EYXRhLnRpbWVvdXRIYW5kbGUgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGNsb3NlU2Vzc2lvbih1cmwpO1xuICAgICAgICB9LCA1MDApO1xuICAgIH0pO1xufVxuZXhwb3J0cy5yZXF1ZXN0ID0gcmVxdWVzdDtcbi8qKlxuICogQnkgZGVmYXVsdCwgdGhyb3cgZm9yIGFueSBub24tMnh4IHN0YXR1cyBjb2RlXG4gKiBAcGFyYW0gc3RhdHVzIC0gc3RhdHVzIGNvZGUgZnJvbSB0aGUgSFRUUCByZXNwb25zZVxuICovXG5mdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG59XG4vKipcbiAqIE9idGFpbiBhbiBleGlzdGluZyBoMiBzZXNzaW9uIG9yIGdvIGNyZWF0ZSBhIG5ldyBvbmUuXG4gKiBAcGFyYW0gaG9zdCAtIFRoZSBob3N0bmFtZSB0byB3aGljaCB0aGUgc2Vzc2lvbiBiZWxvbmdzLlxuICovXG5mdW5jdGlvbiBfZ2V0Q2xpZW50KGhvc3QpIHtcbiAgICBpZiAoIWV4cG9ydHMuc2Vzc2lvbnNbaG9zdF0pIHtcbiAgICAgICAgaWYgKERFQlVHKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgQ3JlYXRpbmcgY2xpZW50IGZvciAke2hvc3R9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2Vzc2lvbiA9IGh0dHAyLmNvbm5lY3QoYGh0dHBzOi8vJHtob3N0fWApO1xuICAgICAgICBzZXNzaW9uXG4gICAgICAgICAgICAub24oJ2Vycm9yJywgZSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGAqRVJST1IqOiAke2V9YCk7XG4gICAgICAgICAgICBkZWxldGUgZXhwb3J0cy5zZXNzaW9uc1tob3N0XTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5vbignZ29hd2F5JywgKGVycm9yQ29kZSwgbGFzdFN0cmVhbUlkKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGAqR09BV0FZKjogJHtlcnJvckNvZGV9IDogJHtsYXN0U3RyZWFtSWR9YCk7XG4gICAgICAgICAgICBkZWxldGUgZXhwb3J0cy5zZXNzaW9uc1tob3N0XTtcbiAgICAgICAgfSk7XG4gICAgICAgIGV4cG9ydHMuc2Vzc2lvbnNbaG9zdF0gPSB7IHNlc3Npb24gfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChERUJVRykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFVzZWQgY2FjaGVkIGNsaWVudCBmb3IgJHtob3N0fWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBleHBvcnRzLnNlc3Npb25zW2hvc3RdO1xufVxuYXN5bmMgZnVuY3Rpb24gY2xvc2VTZXNzaW9uKHVybCkge1xuICAgIGNvbnN0IHNlc3Npb25EYXRhID0gZXhwb3J0cy5zZXNzaW9uc1t1cmwuaG9zdF07XG4gICAgaWYgKCFzZXNzaW9uRGF0YSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHsgc2Vzc2lvbiB9ID0gc2Vzc2lvbkRhdGE7XG4gICAgZGVsZXRlIGV4cG9ydHMuc2Vzc2lvbnNbdXJsLmhvc3RdO1xuICAgIGlmIChERUJVRykge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBDbG9zaW5nICR7dXJsLmhvc3R9YCk7XG4gICAgfVxuICAgIHNlc3Npb24uY2xvc2UoKCkgPT4ge1xuICAgICAgICBpZiAoREVCVUcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYENsb3NlZCAke3VybC5ob3N0fWApO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGlmIChzZXNzaW9uICYmICFzZXNzaW9uLmRlc3Ryb3llZCkge1xuICAgICAgICAgICAgaWYgKERFQlVHKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYEZvcmNpbmcgY2xvc2UgJHt1cmwuaG9zdH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZXNzaW9uKSB7XG4gICAgICAgICAgICAgICAgc2Vzc2lvbi5kZXN0cm95KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCAxMDAwKTtcbn1cbmV4cG9ydHMuY2xvc2VTZXNzaW9uID0gY2xvc2VTZXNzaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cDIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/http2.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Endpoint = exports.Discovery = exports.AuthPlus = exports.createAPIRequest = exports.getAPI = exports.GaxiosError = exports.Gaxios = exports.AwsClient = exports.IdentityPoolClient = exports.BaseExternalAccountClient = exports.ExternalAccountClient = exports.GoogleAuth = exports.DefaultTransporter = exports.UserRefreshClient = exports.Compute = exports.JWT = exports.OAuth2Client = void 0;\nvar google_auth_library_1 = __webpack_require__(/*! google-auth-library */ \"(action-browser)/./node_modules/google-auth-library/build/src/index.js\");\nObject.defineProperty(exports, \"OAuth2Client\", ({ enumerable: true, get: function () { return google_auth_library_1.OAuth2Client; } }));\nObject.defineProperty(exports, \"JWT\", ({ enumerable: true, get: function () { return google_auth_library_1.JWT; } }));\nObject.defineProperty(exports, \"Compute\", ({ enumerable: true, get: function () { return google_auth_library_1.Compute; } }));\nObject.defineProperty(exports, \"UserRefreshClient\", ({ enumerable: true, get: function () { return google_auth_library_1.UserRefreshClient; } }));\nObject.defineProperty(exports, \"DefaultTransporter\", ({ enumerable: true, get: function () { return google_auth_library_1.DefaultTransporter; } }));\nObject.defineProperty(exports, \"GoogleAuth\", ({ enumerable: true, get: function () { return google_auth_library_1.GoogleAuth; } }));\nObject.defineProperty(exports, \"ExternalAccountClient\", ({ enumerable: true, get: function () { return google_auth_library_1.ExternalAccountClient; } }));\nObject.defineProperty(exports, \"BaseExternalAccountClient\", ({ enumerable: true, get: function () { return google_auth_library_1.BaseExternalAccountClient; } }));\nObject.defineProperty(exports, \"IdentityPoolClient\", ({ enumerable: true, get: function () { return google_auth_library_1.IdentityPoolClient; } }));\nObject.defineProperty(exports, \"AwsClient\", ({ enumerable: true, get: function () { return google_auth_library_1.AwsClient; } }));\nvar gaxios_1 = __webpack_require__(/*! gaxios */ \"(action-browser)/./node_modules/gaxios/build/src/index.js\");\nObject.defineProperty(exports, \"Gaxios\", ({ enumerable: true, get: function () { return gaxios_1.Gaxios; } }));\nObject.defineProperty(exports, \"GaxiosError\", ({ enumerable: true, get: function () { return gaxios_1.GaxiosError; } }));\nvar apiIndex_1 = __webpack_require__(/*! ./apiIndex */ \"(action-browser)/./node_modules/googleapis-common/build/src/apiIndex.js\");\nObject.defineProperty(exports, \"getAPI\", ({ enumerable: true, get: function () { return apiIndex_1.getAPI; } }));\nvar apirequest_1 = __webpack_require__(/*! ./apirequest */ \"(action-browser)/./node_modules/googleapis-common/build/src/apirequest.js\");\nObject.defineProperty(exports, \"createAPIRequest\", ({ enumerable: true, get: function () { return apirequest_1.createAPIRequest; } }));\nvar authplus_1 = __webpack_require__(/*! ./authplus */ \"(action-browser)/./node_modules/googleapis-common/build/src/authplus.js\");\nObject.defineProperty(exports, \"AuthPlus\", ({ enumerable: true, get: function () { return authplus_1.AuthPlus; } }));\nvar discovery_1 = __webpack_require__(/*! ./discovery */ \"(action-browser)/./node_modules/googleapis-common/build/src/discovery.js\");\nObject.defineProperty(exports, \"Discovery\", ({ enumerable: true, get: function () { return discovery_1.Discovery; } }));\nvar endpoint_1 = __webpack_require__(/*! ./endpoint */ \"(action-browser)/./node_modules/googleapis-common/build/src/endpoint.js\");\nObject.defineProperty(exports, \"Endpoint\", ({ enumerable: true, get: function () { return endpoint_1.Endpoint; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nb29nbGVhcGlzLWNvbW1vbi9idWlsZC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLEdBQUcsaUJBQWlCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCLEdBQUcsY0FBYyxHQUFHLG1CQUFtQixHQUFHLGNBQWMsR0FBRyxpQkFBaUIsR0FBRywwQkFBMEIsR0FBRyxpQ0FBaUMsR0FBRyw2QkFBNkIsR0FBRyxrQkFBa0IsR0FBRywwQkFBMEIsR0FBRyx5QkFBeUIsR0FBRyxlQUFlLEdBQUcsV0FBVyxHQUFHLG9CQUFvQjtBQUNwWSw0QkFBNEIsbUJBQU8sQ0FBQyxtR0FBcUI7QUFDekQsZ0RBQStDLEVBQUUscUNBQXFDLDhDQUE4QyxFQUFDO0FBQ3JJLHVDQUFzQyxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUNuSCwyQ0FBMEMsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDM0gscURBQW9ELEVBQUUscUNBQXFDLG1EQUFtRCxFQUFDO0FBQy9JLHNEQUFxRCxFQUFFLHFDQUFxQyxvREFBb0QsRUFBQztBQUNqSiw4Q0FBNkMsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDakkseURBQXdELEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQ3ZKLDZEQUE0RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQztBQUMvSixzREFBcUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDakosNkNBQTRDLEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQy9ILGVBQWUsbUJBQU8sQ0FBQyx5RUFBUTtBQUMvQiwwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUM7QUFDNUcsK0NBQThDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ3RILGlCQUFpQixtQkFBTyxDQUFDLDJGQUFZO0FBQ3JDLDBDQUF5QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUM5RyxtQkFBbUIsbUJBQU8sQ0FBQywrRkFBYztBQUN6QyxvREFBbUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDcEksaUJBQWlCLG1CQUFPLENBQUMsMkZBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILGtCQUFrQixtQkFBTyxDQUFDLDZGQUFhO0FBQ3ZDLDZDQUE0QyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQztBQUNySCxpQkFBaUIsbUJBQU8sQ0FBQywyRkFBWTtBQUNyQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDbEgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9ydGN1dF9hcHAvLi9ub2RlX21vZHVsZXMvZ29vZ2xlYXBpcy1jb21tb24vYnVpbGQvc3JjL2luZGV4LmpzPzQxODIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW5kcG9pbnQgPSBleHBvcnRzLkRpc2NvdmVyeSA9IGV4cG9ydHMuQXV0aFBsdXMgPSBleHBvcnRzLmNyZWF0ZUFQSVJlcXVlc3QgPSBleHBvcnRzLmdldEFQSSA9IGV4cG9ydHMuR2F4aW9zRXJyb3IgPSBleHBvcnRzLkdheGlvcyA9IGV4cG9ydHMuQXdzQ2xpZW50ID0gZXhwb3J0cy5JZGVudGl0eVBvb2xDbGllbnQgPSBleHBvcnRzLkJhc2VFeHRlcm5hbEFjY291bnRDbGllbnQgPSBleHBvcnRzLkV4dGVybmFsQWNjb3VudENsaWVudCA9IGV4cG9ydHMuR29vZ2xlQXV0aCA9IGV4cG9ydHMuRGVmYXVsdFRyYW5zcG9ydGVyID0gZXhwb3J0cy5Vc2VyUmVmcmVzaENsaWVudCA9IGV4cG9ydHMuQ29tcHV0ZSA9IGV4cG9ydHMuSldUID0gZXhwb3J0cy5PQXV0aDJDbGllbnQgPSB2b2lkIDA7XG52YXIgZ29vZ2xlX2F1dGhfbGlicmFyeV8xID0gcmVxdWlyZShcImdvb2dsZS1hdXRoLWxpYnJhcnlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJPQXV0aDJDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5PQXV0aDJDbGllbnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJKV1RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5KV1Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb21wdXRlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnb29nbGVfYXV0aF9saWJyYXJ5XzEuQ29tcHV0ZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVzZXJSZWZyZXNoQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnb29nbGVfYXV0aF9saWJyYXJ5XzEuVXNlclJlZnJlc2hDbGllbnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEZWZhdWx0VHJhbnNwb3J0ZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5EZWZhdWx0VHJhbnNwb3J0ZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJHb29nbGVBdXRoXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnb29nbGVfYXV0aF9saWJyYXJ5XzEuR29vZ2xlQXV0aDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkV4dGVybmFsQWNjb3VudENsaWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZ29vZ2xlX2F1dGhfbGlicmFyeV8xLkV4dGVybmFsQWNjb3VudENsaWVudDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJhc2VFeHRlcm5hbEFjY291bnRDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdvb2dsZV9hdXRoX2xpYnJhcnlfMS5CYXNlRXh0ZXJuYWxBY2NvdW50Q2xpZW50OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRlbnRpdHlQb29sQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnb29nbGVfYXV0aF9saWJyYXJ5XzEuSWRlbnRpdHlQb29sQ2xpZW50OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXdzQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnb29nbGVfYXV0aF9saWJyYXJ5XzEuQXdzQ2xpZW50OyB9IH0pO1xudmFyIGdheGlvc18xID0gcmVxdWlyZShcImdheGlvc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkdheGlvc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2F4aW9zXzEuR2F4aW9zOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiR2F4aW9zRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdheGlvc18xLkdheGlvc0Vycm9yOyB9IH0pO1xudmFyIGFwaUluZGV4XzEgPSByZXF1aXJlKFwiLi9hcGlJbmRleFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldEFQSVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXBpSW5kZXhfMS5nZXRBUEk7IH0gfSk7XG52YXIgYXBpcmVxdWVzdF8xID0gcmVxdWlyZShcIi4vYXBpcmVxdWVzdFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUFQSVJlcXVlc3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFwaXJlcXVlc3RfMS5jcmVhdGVBUElSZXF1ZXN0OyB9IH0pO1xudmFyIGF1dGhwbHVzXzEgPSByZXF1aXJlKFwiLi9hdXRocGx1c1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGhQbHVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhdXRocGx1c18xLkF1dGhQbHVzOyB9IH0pO1xudmFyIGRpc2NvdmVyeV8xID0gcmVxdWlyZShcIi4vZGlzY292ZXJ5XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGlzY292ZXJ5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNjb3ZlcnlfMS5EaXNjb3Zlcnk7IH0gfSk7XG52YXIgZW5kcG9pbnRfMSA9IHJlcXVpcmUoXCIuL2VuZHBvaW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRW5kcG9pbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVuZHBvaW50XzEuRW5kcG9pbnQ7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/build/src/isbrowser.js":
/*!***************************************************************!*\
  !*** ./node_modules/googleapis-common/build/src/isbrowser.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isBrowser = void 0;\nfunction isBrowser() {\n    return typeof window !== 'undefined';\n}\nexports.isBrowser = isBrowser;\n//# sourceMappingURL=isbrowser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nb29nbGVhcGlzLWNvbW1vbi9idWlsZC9zcmMvaXNicm93c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9ydGN1dF9hcHAvLi9ub2RlX21vZHVsZXMvZ29vZ2xlYXBpcy1jb21tb24vYnVpbGQvc3JjL2lzYnJvd3Nlci5qcz9iOGU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzQnJvd3NlciA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG59XG5leHBvcnRzLmlzQnJvd3NlciA9IGlzQnJvd3Nlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzYnJvd3Nlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/googleapis-common/build/src/isbrowser.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/googleapis-common/package.json":
/*!*****************************************************!*\
  !*** ./node_modules/googleapis-common/package.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"googleapis-common","version":"7.1.0","description":"A common tooling library used by the googleapis npm module. You probably don\'t want to use this directly.","repository":"googleapis/nodejs-googleapis-common","main":"build/src/index.js","types":"build/src/index.d.ts","files":["build/src","!build/src/**/*.map"],"scripts":{"prebenchmark":"npm run compile","benchmark":"node build/benchmark/bench.js","compile":"tsc -p .","test":"c8 mocha build/test","system-test":"c8 mocha build/system-test --timeout 600000","presystem-test":"npm run compile","fix":"gts fix","prepare":"npm run compile","pretest":"npm run compile","lint":"gts check","samples-test":"mocha build/samples-test","docs":"compodoc src/","docs-test":"linkinator docs","webpack":"webpack","browser-test":"karma start","predocs-test":"npm run docs","prelint":"cd samples; npm link ../; npm install","clean":"gts clean","precompile":"gts clean"},"keywords":[],"author":"Google LLC","license":"Apache-2.0","dependencies":{"extend":"^3.0.2","gaxios":"^6.0.3","google-auth-library":"^9.7.0","qs":"^6.7.0","url-template":"^2.0.8","uuid":"^9.0.0"},"devDependencies":{"@babel/plugin-proposal-private-methods":"^7.18.6","@compodoc/compodoc":"^1.1.9","@types/execa":"^0.9.0","@types/extend":"^3.0.1","@types/mocha":"^9.0.0","@types/mv":"^2.1.0","@types/ncp":"^2.0.1","@types/nock":"^10.0.3","@types/proxyquire":"^1.3.28","@types/qs":"^6.5.3","@types/sinon":"^17.0.0","@types/tmp":"0.2.6","@types/url-template":"^2.0.28","@types/uuid":"^9.0.0","c8":"^8.0.0","codecov":"^3.5.0","execa":"^5.0.0","gts":"^5.0.0","http2spy":"^2.0.0","is-docker":"^2.0.0","karma":"^6.0.0","karma-chrome-launcher":"^3.0.0","karma-coverage":"^2.0.0","karma-firefox-launcher":"^2.0.0","karma-mocha":"^2.0.0","karma-remap-coverage":"^0.1.5","karma-sourcemap-loader":"^0.4.0","karma-webpack":"^4.0.0","linkinator":"^3.1.0","mocha":"^9.2.2","mv":"^2.1.1","ncp":"^2.0.0","nock":"^13.0.0","null-loader":"^4.0.0","proxyquire":"^2.1.3","puppeteer":"^18.2.1","sinon":"^17.0.0","tmp":"^0.2.0","ts-loader":"^8.0.0","typescript":"5.1.6","webpack":"^4.0.0","webpack-cli":"^4.0.0"},"engines":{"node":">=14.0.0"}}');

/***/ })

};
;